:root {                           /* setting up color schemes */
  --color-win: #78CF82;
  --color-lose: #D94545;
  --color-start: #5b85b7;
  --color-neutral: #445069;
  --color-neutral-light: #D2D2D2;
  --color-keys: #37474F;
  --color-keys-light: #E5E5E5;
  --button-color: #ADFF2F;
  --button-color-border:#DEB887;
  --font-size-large: 60px;
  --font-size-medium: 20px;
  --transition: all .2s ease-in-out;
}

/* main */
* {                  /* selects all elements */
  box-sizing: border-box; /* def how the width and ht of an element are calculated: if they have padding and borders */
}

body 
{
  justify-content: space-evenly; /*  aligns the container's items  */
  flex-direction: column;
  display: flex; /* Displays an element as a block flex container */
  height: 100vh;
}
/* Flex-basis controls the initial size of the element
If the flex-direction of the container is set to row, it controls the element's width. 
If the flex-direction of the container is set to column, it controls the element's height.
It will override the width or height property of the element, unless you use flex-basis: auto. */


li, ol, ul 
{
  padding: 0; /* padding is the space between its content and its border. */
  display: inline-block; /* Any height and width properties will have no effect */
}

h2 {   /* only changes h2 headings */
  margin: 0;     /*all four margins are 0 */
  text-transform: uppercase;
  font-family: 'Open Sans', sans-serif;
  font-size: var(--font-size-large);
  margin: 0;
  animation: mainTitleDrop 1.6s; /* animation will last 1.6s */
}

button { /* a majority of my color scheme */
  margin: 6px;
  border: 1px solid transparent;
  padding: .5rem 1rem;
  color: var(--color-keys); 
  font-size: var(--font-size-medium);
  background-color: var(--color-keys-light);
  border-radius: 5px;
  -webkit-transition: var(--transition);
  -o-transition: var(--transition);
  transition: var(--transition);
}

button:hover {

  background: var(--button-color);
  border: 2px solid  var(--button-color-border);
}


.container { /* adjusting the elements of the container class */
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  height: 100%;
  max-height: 900px;
  text-align: center;
}

.section /* adjusting the elements of another class */
{
  width: 100%;
  padding: 10px;
}

/* Title */
.header { /* adjusting the elements of another class */
  color: var(--color-start);
}

/* Scoreboard */
.tries { /* adjusting the elements of another class */
}

/* Phrase */
.letter {
  font-size: var(--font-size-medium);
  height: 65px;
  width: 65px;
  padding: 20px 1px 0 1px;
  margin-right: 2px;
  color: transparent;
  background: var(--color-neutral-light);
  border-radius: 5px;
}

.space {
  width: 15px;
}

.show {
  color: #000;
  background-color: #76CE82;
  transition: .3s;
}

/* Keyboard */
.keyrow {
  display: flex;
  justify-content: center;
}

.chosen {
  background: var(--color-neutral);
  border-radius: 5px;
  font-size: var(--font-size-medium);
  color: #FFFFFF;
}

.btn__reset {
  padding: 8px;
  margin: 50px auto;
  background: #FFFFFF;
  border-radius: 5px;
  font-size: var(--font-size-medium);
  transition: all .3s ease-in;
}

.keyrow button{ 
  cursor: pointer;
 }


.btn__reset:hover {
    transform: translateY(-6px);
    box-shadow: 0 6px 2px #aecf4a;
    cursor: pointer;
}
.btn__reset:active {
  transform: translateY(0);
  box-shadow: 0 0 0;
}


/* Adding an Overlay affect*/
#overlay {                      /* # for ID and . for class */
  display: flex;
  flex-direction: column;
  position: fixed;
  color: #AFEEEE;
  justify-content: center;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  border-radius: 5px;
}


.title {
  color: #FFF;
}


.start {
  background-color: var(--color-start);
}

/* so the a tag can pick up the style  */
.start a { 
  color: var(--color-win);
}


.win {
  background-color: var(--color-win);
  transition: all .3s ease-in;
}

.lose {
  background-color: var(--color-lose);
  transition: all .3s ease-in;
}


/* Animation description */
@keyframes mainTitleDrop { 
  opacity: 0;
  transform: translateY(-100px);
}
50% {
  opacity: 1;
  transform: translateY(0);
}

70% {
  opacity: 1;
  transform:translateY(-20px);

}
100% {
  opacity: 1;
  transform: translateY(0);
}

}